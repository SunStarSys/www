Title: Information Architecture
Dependencies: *.md.en
Categories: Orion, Architecture, ZFS
Keywords: information,topology,hypermedia,rest,architecture,hateoas
Status: draft

[TOC]

### Introduction

Information Architecture **organizes** and **arranges** {# lede #}the entire gamut of technologies relevant to the design, presentation, relationships, and architectural constraints that cover every URL you serve{# lede #} over HTTP, both publicly and privately.  This essay is a high-level survey of my expertise in these areas; it is far from comprehensive given the vast field it intends to cover.

### Usability, Discovery, and Link Topology: the Big Picture

### Contrasting Heirarchies with Tagged Search

#### Radically Rearchitecting Wiki Search

##### Human Interface Goals

###### Powerful Syntax

###### Hashtagged Seaches are Keyword Specific Instead of Generic Word Searches

###### Easy Scope Expansion

###### Interactive Results Filtration Engine

###### Automatic Performance Scaling to 100K document trees

###### Comprehensible Result Ordering / Prioritization

###### Per-User Security (ACL) Contextualized Results

###### Hits Linked Directly to Target-Specific Document Locations

###### Live, RealTime Results (aka No Stale Indexed Corpus)

##### Customer Adoption Goals

###### Deliverable as "application/json" Upon Request

###### Styling is Semantically Controlled by Customer Installation of the `/content/css/boostrap.min.css` File

###### `search.html` Template is Overridable by Customer Installation of the `/templates/search.html` File

###### `main.html` Derived Template is Overridable by Customer Installation of the `/templates/main.html` File

### REST, HATEOAS, and Content Negotiation

### Beautiful URLs &mdash; Both Permanent and Transient

### Structured, Future-Proofed MultiMedia Content

#### GitHub Flavored Markdown with Mermaid Integration

#### YAML Headers for MetaData

##### A Turing Complete Programming Language Ain't Data - it doesn't belong in your content sources

#### The Value of Enabling Template Preprocessing on Content

- Inline Data Processing Engines

  - embedded, "safe" json literals in built files
  - build-time markdown table generation

##### Slowly Evolving, Centralized Configuration of Wiki Facts

- corporate service urls
- software artifact locations and version numbers

#### The role of `ssi` Tags in Your MultiMedia Strategy

### Access Controls on Content, from a Single Source of Truth Perspective

### SunStar Systems' Orion&trade; for ZFS-backed Platforms

1. zfs clones
2. zfs send/recv

### StageMaster: Experimentation with Pure Client-Side State Engine

## GitOps build workflows

1. Frontend
2. Backend
3. Documentation

<!-- $Date$ $Author$ $Revision$ -->
